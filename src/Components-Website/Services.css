/* src/Services.css */

/* Toggle Box für "Dienst ausblenden" */
.services-page .toggle-box,
.right-sidebar .toggle-box {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px 24px;
  gap: 12px;
  min-height: auto;
  margin-top: calc(20px - var(--box-padding)); /* Dynamische Berechnung: gewünschter Abstand - Box-Padding */
  margin-bottom: 0;
}

/* Entfernt: .services-page, .services-header, .services-body, .left-column, .right-sidebar */
/* Layout wird jetzt komplett über die globalen Klassen aus global.css gesteuert. */

/* Services header wrapper */
.services-header-wrapper {
  padding-top: var(--page-header-top-spacing);
}

/* Formular-Items */
.form-item label {
  display: block;
  margin-bottom: 4px;
  font-weight: 500;
}

.form-item.full-width {
  grid-column: span 2;
}

/* Die folgenden Styles sind in global.css bereits definiert:
   - .page-header, .page-header__title, .page-header__actions
   - .department-page, .department-body, .left-column, .right-sidebar
   - .page-container, .toggle-box, .service-box, .dropdown-list, .switch, .slider
   - .form-grid (inkl. .two-col)
   - .btn, .btn.cancel, .btn.save, etc.
*/

/* Du brauchst in Services.css deshalb nur das Formular-spezifische */

/* Neue Styles: Felder-Box & Field-Items */
.fields-grid {
  display: grid;
  gap: 12px;
  grid-template-columns: repeat(2, 1fr); /* 2 Spalten x 3 Reihen */
  margin-top: 8px;
}

/* Jede einzelne Feld-Box: weiße Box, Abrundung, graue Umrandung */
.field-box {
  display: flex;
  flex-direction: column;
  gap: 0;
  /* make boxes a bit more compact when in two-column layout */
  position: relative;
  margin-top: 12px; /* Platz für den Titel oben */
}

/* Container für die Radio-Buttons (mit Rahmen) */
.field-box-content {
  background: #fff;
  border: 1px solid #d0d0d0;
  border-radius: 16px;
  padding: 12px;
  min-height: 68px;
}

/* Titel des Felds - über dem Rahmen */
.field-box .field-title {
  font-size: 14px;
  line-height: 1.4;
  font-weight: 400;
  color: #000;
  margin-bottom: 4px; /* Abstand zum Rahmen */
  padding-left: 4px; /* leichte Einrückung wie bei anderen Labels */
}

/* Radio-Gruppe: vertikales (untereinander) Layout, Abstand */
.radio-group {
  display: flex;
  flex-direction: column; /* OPTIONEN UNTEREINANDER */
  gap: 8px;
  align-items: flex-start;
}

/* Sicherstellen, dass der Text neben dem Radio-Button dieselbe Größe hat */
.radio-option,
.radio-option span {
  font-size: 14px;
  line-height: 1.4;
  color: var(--label-color);
}

/* Einzelne Radio-Option: keine Hintergrundfarbe (transparent),
   nur Abstand zwischen den Optionen; der eigentliche Kreis wird gestylt */
.radio-option {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;           /* volle Breite innerhalb der Field-Box */
  padding: 6px 8px;
  border-radius: 8px;
  background: transparent;
  border: none;
  cursor: pointer;
  user-select: none;
  font-size: 14px; /* angepasst: gleiche Schriftgröße wie andere UI-Elemente */
  color: #333;
  justify-content: flex-start;
}

/* Entferne Hover-Background vom Label — Hover beeinflusst nur das Radio-Element */
.radio-option:hover {
  background: transparent;
}

/* ---- Custom Radio Styling ----
   Wir verwenden ein eigenes Aussehen für das Radio: Kreis mit Rand,
   bei Hover dunkler Rand, bei Checked lila Hintergrund + weißer Punkt.
*/
.radio-option input[type="radio"] {
  -webkit-appearance: none;
  appearance: none;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  border: 2px solid #bdbdbd;
  background: transparent;
  display: inline-block;
  position: relative;
  cursor: pointer;
  transition: border-color 0.12s ease, background-color 0.12s ease, box-shadow 0.12s ease;
}

/* Hover: radio button wird dunkler (nur der Kreis) */
.radio-option input[type="radio"]:hover {
  border-color: #4b5563; /* dunkleres Grau */
  box-shadow: 0 0 0 4px rgba(75,85,99,0.06);
}

/* Checked: Hauptfarbe füllen (lila) und weißer innerer Punkt */
.radio-option input[type="radio"]:checked {
  background: var(--color-primary);
  border-color: var(--color-primary);
}

/* Weißer Punkt in der Mitte bei checked */
.radio-option input[type="radio"]:checked::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: #fff;
  box-shadow: none;
}

/* Focus-Visual (optional, dezent) */
.radio-option input[type="radio"]:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(107,54,198,0.12); /* lila Schimmer */
}

/* Textarea nicht manuell vergrößerbar */
.form-grid.labeled-inputs textarea {
  resize: none;
  overflow: hidden;
  min-height: 80px;
}

/* File Upload Button - sieht aus wie der Dropdown-Button */
.file-upload-btn {
  width: 100%;
  height: 44px;
  border: 1px solid #e5e7eb;
  border-radius: var(--border-radius-small);
  background: #fff;
  font-size: 14px;
  font-weight: 400;
  color: #6b7280;
  font-family: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 0 16px;
  cursor: pointer;
  position: relative;
  transition: border-color 0.2s ease;
  margin-top: 16px;
  margin-bottom: 0;
}

.file-upload-btn:hover {
  border-color: #d1d5db;
}

.file-upload-btn .upload-icon {
  width: 20px;
  height: 20px;
  margin-top: 26px;
  margin-bottom: 26px;
}

/* Input mit Arrow-Button */
.input-with-arrow {
  position: relative;
  width: 100%;
  display: flex;
}

.input-with-arrow input {
  width: 100%;
  padding-right: 35px !important; /* Platz für den Button rechts */
}

/* Gemeinsame Basis-Styles für Service Time Arrow Buttons */
button.service-time-arrow-btn,
.service-time-arrow-btn {
  position: absolute !important;
  right: 0 !important;
  height: 50% !important; /* Jeder Button nimmt 50% der Höhe ein */
  width: 30px !important;
  border: none !important;
  background-color: transparent !important; /* Kein Hintergrund */
  border-radius: 0 !important; /* Alle Ecken erstmal eckig */
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  cursor: pointer !important;
  transition: background-color 0.2s ease !important;
  z-index: 2 !important;
  padding: 0 !important;
  margin: 0 !important;
}

/* Oberer Button - Pfeil nach oben */
button.service-time-arrow-btn.arrow-up,
.service-time-arrow-btn.arrow-up {
  top: 0 !important;
  border-top-right-radius: 6px !important; /* Oben rechts abgerundet */
  border-left: 1px solid #ddd !important; /* Linke Border */
  border-bottom: 1px solid #ddd !important; /* Untere Border wo sich die Buttons treffen */
}

/* Unterer Button - Pfeil nach unten */
button.service-time-arrow-btn.arrow-down,
.service-time-arrow-btn.arrow-down {
  top: 50% !important; /* Startet bei 50%, trifft sich in der Mitte mit dem oberen */
  border-bottom-right-radius: 6px !important; /* Unten rechts abgerundet */
  border-left: 1px solid #ddd !important; /* Linke Border */
  border-top: 1px solid #ddd !important; /* Obere Border wo sich die Buttons treffen */
}

/* Pfeil im oberen Button um 180° drehen (zeigt nach oben) */
.service-time-arrow-btn.arrow-up img {
  transform: rotate(180deg) !important;
}

button.service-time-arrow-btn:hover,
.service-time-arrow-btn:hover {
  background-color: rgba(124, 58, 237, 0.1) !important; /* Leichter violetter Hintergrund beim Hover */
}

.service-time-arrow-btn img {
  width: 10px !important;
  height: 6px !important;
  filter: none !important; /* Icon bleibt schwarz */
  opacity: 0.6 !important;
  transition: opacity 0.2s ease !important;
}

.service-time-arrow-btn:hover img {
  opacity: 1 !important; /* Volle Deckkraft beim Hover */
}

/* Fokus-Stil anpassen */
.input-with-arrow input:focus ~ .service-time-arrow-btn {
  background-color: transparent !important;
}

/* Responsive: bei sehr schmalen Bildschirmen stapeln die Optionsgruppen */
@media (max-width: 520px) {
  .fields-grid {
    grid-template-columns: 1fr; /* bei sehr klein wieder 1 Spalte */
  }
  .radio-group {
    gap: 8px;
  }
}
